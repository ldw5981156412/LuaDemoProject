worker_processes  1;

#开发环境
error_log  logs/error.log  debug;

pid     logs/nginx.pid;

events {
  worker_connections  1024;
}

http {
  default_type 'text/html';
  charset utf-8;

  # 先定义日志格式，main是日志格式的名字
  log_format main '$remote_addr - $remote_user [$time_local] $request - '
    ' $status - $body_bytes_sent [$http_referer] '
    '[$http_user_agent] [$http_x_forwarded_for]';
  # 配置日志文件、访问日志格式
  access_log logs/access_main.log main;

  lua_package_path "./?.lua;F:/github/LuaDemoProject/src/?.lua;D:/Program Files (x86)/openresty-1.21.4.2-win32/lualib/?.lua;;";

  # 初始化项目
  init_by_lua_file luaScript/initial/loading_config.lua;

  #调试模式（即关闭lua脚本缓存)
  lua_code_cache off;

  server {
    listen       80 default;
    server_name  localhost;
    default_type 'text/html';
    charset utf-8;

    location / {
      echo "默认根路径匹配: /";
    }

    #测试lua是否可以执行
    location  /lua {
      content_by_lua 'ngx.say("Hello, Lua!")';
    }

    location /test {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/test.lua;
    }

    location /helloworld {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/module/demo/helloworld.lua;
    }

    location /demo {
      default_type 'text/html';
      charset utf-8;
      content_by_lua_file luaScript/module/demo/runDemo.lua;
    }

    location /access_demo {
      access_by_lua '
      ngx.log(ngx.DEBUG, "remote_addr"..ngx.var.remote_addr);
      if ngx.var.remote_addr == "192.168.233.128" then
        return;
      end
      ngx.exit(ngx.HTTP_UNAUTHORIZED);
      ';
      echo "hello world";
    }

    location  /access_demo2 {
      allow "192.168.56.121";
      deny all;
      echo "hello";
    }

    location /add_params_demo {
      set_by_lua $sum '
      local args = ngx.req.get_uri_args();
      local a = args["a"];
      local b = args["b"];
      return a + b;
      ';
      echo "$arg_a + $arg_b = $sum";
    }

    location /add_params_demo_2 {
      set_by_lua $sum '
      local a = tonumber(ngx.arg[1]);
      local b = tonumber(ngx.arg[2]);
      return a + b;
      ' $arg_a $arg_b;
      echo "$arg_a + $arg_b = $sum";
    }




  }
}
